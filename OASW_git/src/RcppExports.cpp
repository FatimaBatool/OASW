// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// grab
int grab(int i, int j);
RcppExport SEXP _OASW_grab(SEXP iSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(grab(i, j));
    return rcpp_result_gen;
END_RCPP
}
// update_dys_1_and_dys_2
void update_dys_1_and_dys_2(int n, IntegerVector rep_ind, NumericVector dys_1, NumericVector dys_2, NumericVector dys, double max_dys);
RcppExport SEXP _OASW_update_dys_1_and_dys_2(SEXP nSEXP, SEXP rep_indSEXP, SEXP dys_1SEXP, SEXP dys_2SEXP, SEXP dysSEXP, SEXP max_dysSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rep_ind(rep_indSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_1(dys_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_2(dys_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys(dysSEXP);
    Rcpp::traits::input_parameter< double >::type max_dys(max_dysSEXP);
    update_dys_1_and_dys_2(n, rep_ind, dys_1, dys_2, dys, max_dys);
    return R_NilValue;
END_RCPP
}
// bswap
void bswap(int K, int n, IntegerVector rep_ind, NumericVector dys_1, NumericVector dys_2, NumericVector effect, NumericVector dys, double max_dys);
RcppExport SEXP _OASW_bswap(SEXP KSEXP, SEXP nSEXP, SEXP rep_indSEXP, SEXP dys_1SEXP, SEXP dys_2SEXP, SEXP effectSEXP, SEXP dysSEXP, SEXP max_dysSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rep_ind(rep_indSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_1(dys_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_2(dys_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type effect(effectSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys(dysSEXP);
    Rcpp::traits::input_parameter< double >::type max_dys(max_dysSEXP);
    bswap(K, n, rep_ind, dys_1, dys_2, effect, dys, max_dys);
    return R_NilValue;
END_RCPP
}
// hpsort
void hpsort(int n, NumericVector vect);
RcppExport SEXP _OASW_hpsort(SEXP nSEXP, SEXP vectSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vect(vectSEXP);
    hpsort(n, vect);
    return R_NilValue;
END_RCPP
}
// silhouettes
void silhouettes(int K, int n, IntegerVector medoids, IntegerVector clust, IntegerVector clus_size, NumericVector dys, NumericVector dys_j, NumericVector avg_dys_clus, NumericVector sil);
RcppExport SEXP _OASW_silhouettes(SEXP KSEXP, SEXP nSEXP, SEXP medoidsSEXP, SEXP clustSEXP, SEXP clus_sizeSEXP, SEXP dysSEXP, SEXP dys_jSEXP, SEXP avg_dys_clusSEXP, SEXP silSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type medoids(medoidsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clust(clustSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys(dysSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_j(dys_jSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_dys_clus(avg_dys_clusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sil(silSEXP);
    silhouettes(K, n, medoids, clust, clus_size, dys, dys_j, avg_dys_clus, sil);
    return R_NilValue;
END_RCPP
}
// hpsortint
void hpsortint(int n, IntegerVector vect);
RcppExport SEXP _OASW_hpsortint(SEXP nSEXP, SEXP vectSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type vect(vectSEXP);
    hpsortint(n, vect);
    return R_NilValue;
END_RCPP
}
// silswap
void silswap(int K, int n, IntegerVector rep_ind, IntegerVector medoids, IntegerVector altmeds, IntegerVector clust, IntegerVector clus_size, NumericVector dys, NumericVector dys_1, NumericVector dys_i, NumericVector avg_dys_clus, NumericVector silh, NumericVector altsilh, IntegerVector iter);
RcppExport SEXP _OASW_silswap(SEXP KSEXP, SEXP nSEXP, SEXP rep_indSEXP, SEXP medoidsSEXP, SEXP altmedsSEXP, SEXP clustSEXP, SEXP clus_sizeSEXP, SEXP dysSEXP, SEXP dys_1SEXP, SEXP dys_iSEXP, SEXP avg_dys_clusSEXP, SEXP silhSEXP, SEXP altsilhSEXP, SEXP iterSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rep_ind(rep_indSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type medoids(medoidsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type altmeds(altmedsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clust(clustSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys(dysSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_1(dys_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_i(dys_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_dys_clus(avg_dys_clusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type silh(silhSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type altsilh(altsilhSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type iter(iterSEXP);
    silswap(K, n, rep_ind, medoids, altmeds, clust, clus_size, dys, dys_1, dys_i, avg_dys_clus, silh, altsilh, iter);
    return R_NilValue;
END_RCPP
}
// clusanal
void clusanal(int K, int n, IntegerVector rep_ind, NumericVector dys_1, NumericVector dys, double max_dys, IntegerVector medoid, IntegerVector clus_size, NumericVector clus_diam, NumericVector clus_sep, NumericVector clus_dys_1_avg, NumericVector clus_dys_1_max, IntegerVector index_by_cluster, IntegerVector clus_vect, NumericVector avg_dys_clust, NumericVector a, NumericVector b, NumericVector silh, NumericVector avg_clus_silh, NumericVector avg_silh);
RcppExport SEXP _OASW_clusanal(SEXP KSEXP, SEXP nSEXP, SEXP rep_indSEXP, SEXP dys_1SEXP, SEXP dysSEXP, SEXP max_dysSEXP, SEXP medoidSEXP, SEXP clus_sizeSEXP, SEXP clus_diamSEXP, SEXP clus_sepSEXP, SEXP clus_dys_1_avgSEXP, SEXP clus_dys_1_maxSEXP, SEXP index_by_clusterSEXP, SEXP clus_vectSEXP, SEXP avg_dys_clustSEXP, SEXP aSEXP, SEXP bSEXP, SEXP silhSEXP, SEXP avg_clus_silhSEXP, SEXP avg_silhSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type rep_ind(rep_indSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_1(dys_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys(dysSEXP);
    Rcpp::traits::input_parameter< double >::type max_dys(max_dysSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type medoid(medoidSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type clus_diam(clus_diamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type clus_sep(clus_sepSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type clus_dys_1_avg(clus_dys_1_avgSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type clus_dys_1_max(clus_dys_1_maxSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type index_by_cluster(index_by_clusterSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_vect(clus_vectSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_dys_clust(avg_dys_clustSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type silh(silhSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_clus_silh(avg_clus_silhSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_silh(avg_silhSEXP);
    clusanal(K, n, rep_ind, dys_1, dys, max_dys, medoid, clus_size, clus_diam, clus_sep, clus_dys_1_avg, clus_dys_1_max, index_by_cluster, clus_vect, avg_dys_clust, a, b, silh, avg_clus_silh, avg_silh);
    return R_NilValue;
END_RCPP
}
// sil_lab
void sil_lab(int K, int n, IntegerVector clus_lab, IntegerVector clus_size, NumericVector disty, NumericVector dys_j, NumericVector avg_dys_clus, NumericVector sil);
RcppExport SEXP _OASW_sil_lab(SEXP KSEXP, SEXP nSEXP, SEXP clus_labSEXP, SEXP clus_sizeSEXP, SEXP distySEXP, SEXP dys_jSEXP, SEXP avg_dys_clusSEXP, SEXP silSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_lab(clus_labSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disty(distySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_j(dys_jSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_dys_clus(avg_dys_clusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sil(silSEXP);
    sil_lab(K, n, clus_lab, clus_size, disty, dys_j, avg_dys_clus, sil);
    return R_NilValue;
END_RCPP
}
// sil_lab_swap
void sil_lab_swap(int K, int n, IntegerVector clus_lab, IntegerVector alt_clus_lab, IntegerVector clus_size, NumericVector disty, IntegerVector iter, NumericVector dys_i, NumericVector avg_dys_clus, NumericVector silh, NumericVector altsilh);
RcppExport SEXP _OASW_sil_lab_swap(SEXP KSEXP, SEXP nSEXP, SEXP clus_labSEXP, SEXP alt_clus_labSEXP, SEXP clus_sizeSEXP, SEXP distySEXP, SEXP iterSEXP, SEXP dys_iSEXP, SEXP avg_dys_clusSEXP, SEXP silhSEXP, SEXP altsilhSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_lab(clus_labSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type alt_clus_lab(alt_clus_labSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disty(distySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_i(dys_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_dys_clus(avg_dys_clusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type silh(silhSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type altsilh(altsilhSEXP);
    sil_lab_swap(K, n, clus_lab, alt_clus_lab, clus_size, disty, iter, dys_i, avg_dys_clus, silh, altsilh);
    return R_NilValue;
END_RCPP
}
// clustyanlys
void clustyanlys(int K, int n, IntegerVector clus_lab, IntegerVector clus_size, NumericVector silh, NumericVector avg_clus_silh, NumericVector avg_clus_silhtwo, NumericVector avg_silh);
RcppExport SEXP _OASW_clustyanlys(SEXP KSEXP, SEXP nSEXP, SEXP clus_labSEXP, SEXP clus_sizeSEXP, SEXP silhSEXP, SEXP avg_clus_silhSEXP, SEXP avg_clus_silhtwoSEXP, SEXP avg_silhSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_lab(clus_labSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type silh(silhSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_clus_silh(avg_clus_silhSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_clus_silhtwo(avg_clus_silhtwoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_silh(avg_silhSEXP);
    clustyanlys(K, n, clus_lab, clus_size, silh, avg_clus_silh, avg_clus_silhtwo, avg_silh);
    return R_NilValue;
END_RCPP
}
// sil_lab_link
void sil_lab_link(int K, int n, IntegerVector clus_lab, IntegerVector clus_size, NumericVector disty, NumericVector dys_j, NumericVector avg_dys_clus, NumericVector sil);
RcppExport SEXP _OASW_sil_lab_link(SEXP KSEXP, SEXP nSEXP, SEXP clus_labSEXP, SEXP clus_sizeSEXP, SEXP distySEXP, SEXP dys_jSEXP, SEXP avg_dys_clusSEXP, SEXP silSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_lab(clus_labSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disty(distySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_j(dys_jSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_dys_clus(avg_dys_clusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sil(silSEXP);
    sil_lab_link(K, n, clus_lab, clus_size, disty, dys_j, avg_dys_clus, sil);
    return R_NilValue;
END_RCPP
}
// hosil_lab_swap
void hosil_lab_swap(int n, NumericVector disty, IntegerVector clus_lab, IntegerVector clus_size, NumericVector dys_j, NumericVector avg_dys_clus, NumericVector sil, IntegerVector best_clus_lab, IntegerVector all_best_clus_lab, NumericVector all_best_avg_silh, IntegerVector copy_best_clus_lab);
RcppExport SEXP _OASW_hosil_lab_swap(SEXP nSEXP, SEXP distySEXP, SEXP clus_labSEXP, SEXP clus_sizeSEXP, SEXP dys_jSEXP, SEXP avg_dys_clusSEXP, SEXP silSEXP, SEXP best_clus_labSEXP, SEXP all_best_clus_labSEXP, SEXP all_best_avg_silhSEXP, SEXP copy_best_clus_labSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type disty(distySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_lab(clus_labSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clus_size(clus_sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dys_j(dys_jSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type avg_dys_clus(avg_dys_clusSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sil(silSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type best_clus_lab(best_clus_labSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type all_best_clus_lab(all_best_clus_labSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type all_best_avg_silh(all_best_avg_silhSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type copy_best_clus_lab(copy_best_clus_labSEXP);
    hosil_lab_swap(n, disty, clus_lab, clus_size, dys_j, avg_dys_clus, sil, best_clus_lab, all_best_clus_lab, all_best_avg_silh, copy_best_clus_lab);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OASW_grab", (DL_FUNC) &_OASW_grab, 2},
    {"_OASW_update_dys_1_and_dys_2", (DL_FUNC) &_OASW_update_dys_1_and_dys_2, 6},
    {"_OASW_bswap", (DL_FUNC) &_OASW_bswap, 8},
    {"_OASW_hpsort", (DL_FUNC) &_OASW_hpsort, 2},
    {"_OASW_silhouettes", (DL_FUNC) &_OASW_silhouettes, 9},
    {"_OASW_hpsortint", (DL_FUNC) &_OASW_hpsortint, 2},
    {"_OASW_silswap", (DL_FUNC) &_OASW_silswap, 14},
    {"_OASW_clusanal", (DL_FUNC) &_OASW_clusanal, 20},
    {"_OASW_sil_lab", (DL_FUNC) &_OASW_sil_lab, 8},
    {"_OASW_sil_lab_swap", (DL_FUNC) &_OASW_sil_lab_swap, 11},
    {"_OASW_clustyanlys", (DL_FUNC) &_OASW_clustyanlys, 8},
    {"_OASW_sil_lab_link", (DL_FUNC) &_OASW_sil_lab_link, 8},
    {"_OASW_hosil_lab_swap", (DL_FUNC) &_OASW_hosil_lab_swap, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_OASW(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
